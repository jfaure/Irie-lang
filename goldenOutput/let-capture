basic = (λb(1) B0) : ∏ A → A → A
noCapture = (λb(1) let
  g = (λb(1) (_+_ B0 B0)) : %i32 → %i32
in (letBound: 1.0 B0)) : %i32 → %i32
free = (λb(1) let
  g = (1,[0])(λb(1) (_+_ B1 B0)) : %i32 → %i32
in letBound: 1.0) : %i32 → %i32 → %i32
free2 = (λb(3) let
  g = (3,[0,2])(λb(1) (_+_ B3 (_+_ B0 B1))) : %i32 → %i32
in (letBound: 1.0 B1)) : %i32 → %i32 → %i32 → %i32
t1 = (λb(1) let
  g = (1,[0])(λb(1) let
    h = (2,[0,1])(λb(1) (_+_ B0 (_+_ B2 B1))) : %i32 → %i32
  in letBound: 2.0) : %i32 → %i32 → %i32
in letBound: 1.0) : %i32 → %i32 → %i32 → %i32
t2 = (λb(1) let
  g = (1,[0])(λb(1) {f1 = (2,[1])B1 : τ(31) ; f2 = (2,[0])B0 : τ(33)}) : ∏ A → A → {f1 : τ(31) , f2 : A}
in (Int 3)) : ⊤ → %i32
t3 = (λb(1) let
  g = (1,[0]){f1 = (1,[0])B0 : τ(37) ; f2 = (1,[0])B0 : τ(37)} : {f1 : τ(37) , f2 : τ(37)}
in (Int 3)) : ⊤ → %i32
