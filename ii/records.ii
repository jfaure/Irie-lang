--f r = r.q
--mkRecord i s = f {q = i ; z = s }
--z = mkRecord 3 "hello"

-- p x = if x.p then x.q else x.q -- : {p:Bool , q:a} -> a

--Nat =
-- | Z : Nat
-- | S : Nat -> Nat
--
----noFreeVars x = case x of | S y => y
--Add x y = case y of | Z => x | S y => Add x y
--
--F = Add Z Z

-- Rect = | R : Int -> Rect
-- ok = putNumber (case (R 3) of | R y => y)

--List =
-- | End  : List
-- | Next : Int -> (List -> List)

--printList x = case x of
-- | End      => 0
-- | Next i l => plus (putNumber i) (printList l)


