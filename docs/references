Idris implementation overview (esp. a term's type is indexed by its scope)
https://idris2.readthedocs.io/en/latest/implementation/overview.html

A Focused solution to the avoidance problem
https://www.cs.cmu.edu/~crary/papers/2020/exsig.pdf

Quantitative type theory in practice
https://arxiv.org/pdf/2104.00480.pdf

Congruence Closure in Intensional Type Theory
https://arxiv.org/pdf/1701.04391.pdf

Variable binding and substitution for (nameless) dummies
https://amblafont.github.io/articles/debruijn-extended.pdf

Unify parsing and reflective printing for fully disambiguated grammars
https://josh-hs-ko.github.io/manuscripts/NGCO20.pdf

Effect handlers in scope
https://www.cs.ox.ac.uk/people/nicolas.wu/papers/Scope.pdf

Latex quicknotes in vim
https://castel.dev/post/lecture-notes-1/

Monadic Augment and Generalised Short Cut
Fusion
https://cs.appstate.edu/~johannp/jfp06-revised.pdf

Higher dimensional trees, algebraically
https://web.archive.org/web/20161208002902/http://www.cs.le.ac.uk/people/ak155/Papers/CALCO-07/GK07.pdf

Comonads
https://bartoszmilewski.com/2017/01/02/comonads/

Conjugate Hylomorphisms
R. Hinze, N. Wu, J. Gibbons

R. Hinze, “Adjoint folds and unfolds—an extended study,” Science of Computer Programming, Aug. 2012.
https://www.cs.ox.ac.uk/ralf.hinze/publications/SCP-78-11.pdf

Unifying structured recursion schemes
http://www.cs.ox.ac.uk/jeremy.gibbons/publications/urs.pdf

counterexamples
https://counterexamples.org/title.html

Hyperscan: A Fast multi-pattern regex matcher for modern CPUS
https://www.usenix.org/system/files/nsdi19-wang-xiang.pdf

simd pattern matching
https://github.com/jneem/teddy

Profunctor optics: a categorical update
https://arxiv.org/pdf/2001.07488.pdf

SIMD at Insomniac
https://deplinenoise.files.wordpress.com/2015/03/gdc2015_afredriksson_simd.pdf

quickcheck generator Compiler testing
https://dl.acm.org/doi/10.1145/3110259

compiler testing
https://dl.acm.org/doi/10.1145/3363562

it is not the case that Prop : Prop, that would be inconsistent. Rather quantifications over all propositions is again a proposition

The danger inherent in higher order programming is well testified by a long series
of studies relating complexity classes to hierarchies of terms with increasing type
rank (see e.g. [Gurevich 1983; Goerdt 1992; Goerdt and Seidl 1990; Hillebrand and
Kanellakis 1996; Asperti 2015])

Duality In action (2012 Paul Downen ; Zena M. Ariola)
https://par.nsf.gov/servlets/purl/10300563

The Abstract Calculus
https://medium.com/@maiavictor/the-abstract-calculus-fe8c46bcf39c

A Denotational Semantics for the Symmetric Interaction Combinators
http://logica.uniroma3.it/files/CombSemantics.pdf

The Optimal implementation of functional programming languages
https://www.researchgate.net/publication/235778993_The_optimal_implementation_of_functional_programming_languages

Lambdascope Another optimal implementation of the lambda-calculus
https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.109.3616&rep=rep1&type=pdf

About the efficient reduction of lambda terms
https://arxiv.org/pdf/1701.04240.pdf

An Algorithm for Optimal Lambda Calculus Reduction
https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.90.2386&rep=rep1&type=pdf

Extensible records with scoped labels
https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/scopedlabels.pdf

Abstracting extensible data types
https://dl.acm.org/doi/pdf/10.1145/3290325

Conor McBridge StackOverflow answers
https://github.com/pigworker/so-pigworker/tree/master/markdown

Scrap your zippers
https://michaeldadams.org/papers/scrap_your_zippers/ScrapYourZippers-2010.pdf

The best of both worlds (linear functional programming without compromise)
https://arxiv.org/pdf/1612.06633.pdf

Runners in action
https://arxiv.org/abs/1910.11629

Identity elimination in homotopy type theory
https://homotopytypetheory.org/2011/04/10/just-kidding-understanding-identity-elimination-in-homotopy-type-theory/

Why not W
https://jashug.github.io/papers/whynotw.pdf

On Universes in type theory
http://www2.math.uu.se/~palmgren/universe.pdf

A Finite axiomatization of inductive-recursive definitions
http://www.cse.chalmers.se/~peterd/papers/Finite_IR.pdf

Mahlo universes
https://www.researchgate.net/publication/238140584_Extending_Martin-Lf_Type_Theory_by_One_Mahlo-Universe

Stream Fusion: From Lists to Streams to Nothing at All
https://www.researchgate.net/profile/Don-Stewart-4/publication/221241130_Stream_Fusion_From_Lists_to_Streams_to_Nothing_at_All/links/00463526ccdd52306e000000/Stream-Fusion-From-Lists-to-Streams-to-Nothing-at-All.pdf

Fold-Build
file:///home/jamie/Downloads/LaunchburySheard95.pdf

Warm Fusion: Deriving Build-Catas from Recursive Definitions
https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.39.5086&rep=rep1&type=pdf

A Short cut to deforestation
https://www.microsoft.com/en-us/research/wp-content/uploads/2016/07/deforestation-short-cut.pdf?ranMID=46131&ranEAID=je6NUbpObpQ&ranSiteID=je6NUbpObpQ-dRosY.RZaEOuM4I6fkKhbA&epi=je6NUbpObpQ-dRosY.RZaEOuM4I6fkKhbA&irgwc=1&OCID=AID2200057_aff_7806_1243925&tduid=%28ir__691mga0rk9kf6whl2qniaboutn2xrs6lidkp6skf00%29%287806%29%281243925%29%28je6NUbpObpQ-dRosY.RZaEOuM4I6fkKhbA%29%28%29&irclickid=_691mga0rk9kf6whl2qniaboutn2xrs6lidkp6skf00

Examples of paradoxes using combinations of impredicative polymorphism + excluded middle + large elimination
https://github.com/FStarLang/FStar/issues/360

Impredicative encodings of (higher) inductive types
https://arxiv.org/pdf/1802.02820.pdf

Functional programming with bananas, lenses, envelopes and barbed wire
https://maartenfokkinga.github.io/utwente/mmf91m.pdf

Quotient inductive inductive types
https://arxiv.org/pdf/2006.11736.pdf

elaborating dependent (co)pattern matching
http://www2.tcs.ifi.lmu.de/~abel/icfp18.pdf

algebraic subtyping
https://www.cl.cam.ac.uk/~sd601/thesis.pdf

The fire triangle
https://www.xn--pdrot-bsa.fr/articles/dcbpv.pdf

A polymorphic lambda-calculus with higher-order sized types
http://www2.tcs.ifi.lmu.de/~abel/diss.pdf

polymorphism , subtyping and type inference in mlsub
https://dl.acm.org/doi/pdf/10.1145/3093333.3009882

How to Keep your neighbors in order
https://personal.cis.strath.ac.uk/conor.mcbride/Pivotal.pdf

Turing-Completeness totally free
https://strathprints.strath.ac.uk/60166/1/McBride_LNCS2015_Turing_completeness_totally_free.pdf

ML^F Raising ML to the power of System F
http://pauillac.inria.fr/~remy/mlf/icfp.pdf
ML^F thesis
http://gallium.inria.fr/~remy/mlf/mlf.pdf

Parsing MixFix operators
http://www.cse.chalmers.se/~nad/publications/danielsson-norell-mixfix.pdf

Dependent types with subtyping and late-bound overloading
https://www.irif.fr/~gc/papers/infcomp99.pdf

Open GADTs and Declaration-site Variance: A Problem Statement
http://lampwww.epfl.ch/~hmiller/scala2013/resources/pdfs/paper5.pdf

GADT meet subtyping
http://gallium.inria.fr/~remy/gadts/Scherer-Remy:gadts-subtyping@short2012.pdf

The semantics of rank polymorphism
https://arxiv.org/pdf/1907.00509.pdf

## Other references
Boxy Types: Inference for higher-rank types and impredicativity
https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/boxy-icfp.pdf

Approximate Normalization for Gradual Types
https://arxiv.org/pdf/1906.06469.pdf

Generic level polymorphic N-ary Functions
https://gallais.github.io/pdf/tyde19.pdf

Arity-Generic Datatype-Generic Programming
https://www.seas.upenn.edu/~sweirich/papers/aritygen.pdf

Do Be Do Be Do
https://arxiv.org/pdf/1611.09259.pdf

Supermonads and superapplicatives
https://jbracker.de/publications/2017-BrackerNilsson-SupermonadsAndSuperapplicatives-UnderConsideration.pdf

goto.ucsd.edu/~pmr/papers/liquid-types-pldi08.pdf

Idris, a general purpose dependently typed programming language: design and implementation
https://eb.host.cs.st-andrews.ac.uk/drafts/impldtp.pdf

Quantitative type theory
https://bentnib.org/quantitative-type-theory.pdf

Dependent Types in Haskell: Theory and Practice

compiling to Vulkan in Futhark
https://futhark-lang.org/student-projects/steffen-msc-project.pdf

resource dependent algebraic effects
https://eb.host.cs.st-andrews.ac.uk/drafts/dep-eff.pdf

dependent types references
https://math.stackexchange.com/questions/3466976/online-reference-book-for-implementing-concepts-in-type-theory/3468022#3468022

higher-order dynamic pattern unification for dependent types and records
http://www2.tcs.ifi.lmu.de/~abel/unif-sigma-long.pdf

Unification algorithm for coq featuring universe polymorphism and overloading
https://www.mpi-sws.org/~beta/papers/unicoq.pdf

Computational interpretations of linear logic
https://core.ac.uk/download/pdf/81933277.pdf

Syntax and semantics of QTT
https://bentnib.org/quantitative-type-theory.pdf

Use-once variables and linear objects -- storage management, reflection and multi-threading
http://www.pipeline.com/~hbaker1/Use1Var.html

Deferring the details and deriving programs
http://liamoc.net/images/deferring.pdf

Zip Fusion with Hyperfunctions
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.36.4961&rep=rep1&type=pdf

elaborating dependent (co)pattern matching
https://dl.acm.org/doi/10.1145/3236770

Goto statement considered harmful
https://homepages.cwi.nl/~storm/teaching/reader/Dijkstra68.pdf
